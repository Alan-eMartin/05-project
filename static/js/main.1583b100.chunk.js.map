{"version":3,"sources":["assets/bioImg.jpg","firebase/firebase.js","components/Profile/Profile.js","components/TopNav/TopNav.js","components/CartDrawer/CartDrawer.js","components/Shop/Shop.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Profile","props","className","showImg","src","BioImage","alt","showBio","onClick","clickBio","aria-hidden","title","TopNav","toggleOpen","CartDrawer","openClose","toggleClose","cartItems","map","item","price","finalPrice","removeAllItem","Shop","prints","print","img","addItem","id","Footer","href","App","toggleDrawer","setState","isCartOpen","state","toggleBio","isBioVisible","isBioImgVisible","addToCart","newCart","cart","newTotal","total","roundedPrice","Math","floor","Number","EPSILON","emptyCart","database","ref","on","result","printsArray","printData","val","key","push","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,oC,+SCc3CC,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,0CACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,8CAMMR,QAAf,E,qCCaeS,MA1Bf,SAAkBC,GAChB,OACI,yBAAKC,UAAU,oBAEf,yBAAKA,UAAWD,EAAME,QAAU,aAAe,UAC3C,yBAAKC,IAAKC,IAAUC,IAAI,oCAG1B,yBAAKJ,UAAU,eAEf,wBAAIA,UAAWD,EAAME,QAAU,GAAK,UAApC,eAEE,uBAAGD,UAAWD,EAAMM,QAAU,MAAQ,UACtC,0BAAML,UAAU,QAAhB,QADA,2uBACgwB,qCADhwB,mpBACg6C,oCADh6C,8BAIA,4BAAQA,UAAU,MAAMM,QAASP,EAAMQ,UAAvC,SACOR,EAAME,QAAU,GAAK,uBAAGD,UAAU,eAAeQ,cAAY,OAAOC,MAAM,mB,MCT5EC,MATf,SAAgBX,GACd,OACE,yBAAKC,UAAU,UACb,wBAAIS,MAAM,cAAV,eACA,uBAAGT,UAAU,UAAUM,QAASP,EAAMY,YAAY,uBAAGX,UAAU,sBAAsBQ,eAAa,EAAMC,MAAM,iB,MCwBrGG,MA5Bf,SAAoBb,GAClB,OACE,yBAAKC,UAAWD,EAAMc,UAAY,SAAW,UAE3C,4BAAQb,UAAU,cAAcM,QAASP,EAAMe,aAC7C,uBAAGd,UAAU,eAAeQ,cAAY,OAAOC,MAAM,gBAEvD,4BACGV,EAAMgB,UAAUC,KAAI,SAACC,GACpB,OACE,wBAAIjB,UAAU,YACZ,4BAAKiB,EAAKR,OACV,2BAAIQ,EAAKC,YAKjB,yBAAKlB,UAAU,cACf,uCAAkC,IAArBD,EAAMoB,WAAmB,GAAMpB,EAAMoB,aAElD,yBAAKnB,UAAU,YACb,4BAAQA,UAAU,gBAAgBM,QAASP,EAAMqB,eAAjD,cACA,4BAAQpB,UAAU,gBAAlB,e,MCAOqB,MAtBf,SAActB,GACZ,OACEA,EAAMuB,OAAON,KAAI,SAACO,GAChB,OACI,4BACE,yBAAKvB,UAAU,YACb,yBAAKE,IAAKqB,EAAMC,IAAKpB,IAAI,iBAE3B,yBAAKJ,UAAU,aACb,4BAAKuB,EAAMd,OACX,yBAAKT,UAAU,SACb,2BAAG,wCAAH,KAAyBuB,EAAML,OACjC,4BAAQlB,UAAU,YAAYM,QAAS,kBAAKP,EAAM0B,QAAQF,KAAQ,uBAAGvB,UAAU,mBAAmBQ,cAAY,OAAOC,MAAM,cAAciB,GAAIH,EAAMG,a,MCJlJC,MARf,WACE,OACE,uBAAG3B,UAAU,aAAb,QACI,uBAAG4B,KAAK,4BAAR,qBC8HOC,E,kDApHb,aAAgB,IAAD,8BACb,gBAqCFC,aAAe,WAEb,EAAKC,SAAS,CACZC,YAAa,EAAKC,MAAMD,cAzCb,EA8CfE,UAAY,WACV,EAAKH,SAAS,CACZI,cAAe,EAAKF,MAAME,aAC1BC,iBAAkB,EAAKH,MAAMG,mBAjDlB,EAsDfC,UAAY,SAACd,GACX,IAAMe,EAAO,sBAAO,EAAKL,MAAMM,MAAlB,CAAwBhB,IAC/BiB,EAAW,EAAKP,MAAMQ,MAAQlB,EAAML,MACpCwB,EAAeC,KAAKC,MAAoC,KAA7BJ,EAAWK,OAAOC,UAAkB,IAErE,EAAKf,SAAS,CACZQ,KAAMD,EACNG,MAAOC,KA7DI,EAkEfK,UAAY,WAEV,EAAKhB,SAAS,CACbQ,KAFiB,GAGlBE,MAAO,KApEP,EAAKR,MAAQ,CACXX,OAAQ,GACRiB,KAAM,GACNE,MAAO,EACPN,cAAc,EACdC,iBAAiB,EACjBJ,YAAY,GARD,E,gEAaO,IAAD,OAIG3C,EAAS2D,WAAWC,IAAI,cAChCC,GAAG,SAAS,SAACC,GAEvB,IAAMC,EAAc,GAEdC,EAAYF,EAAOG,MAEzB,IAAK,IAAIC,KAAOF,EACdD,EAAYI,KAAKH,EAAUE,IAG7B,EAAKxB,SAAS,CACZT,OAAQ8B,S,+BA8Cd,OACE,oCACE,gCACE,kBAAC,EAAD,CAAQzC,WAAY8C,KAAK3B,eACzB,kBAAC,EAAD,CACEjB,UAAW4C,KAAKxB,MAAMD,WACtBlB,YAAa2C,KAAK3B,aAClBf,UAAW0C,KAAKxB,MAAMM,KACtBpB,WAAYsC,KAAKxB,MAAMQ,MACvBrB,cAAeqC,KAAKV,YAEtB,yBAAK/C,UAAU,aACb,kBAAC,EAAD,CACEO,SAAUkD,KAAKvB,UACf7B,QAASoD,KAAKxB,MAAME,aACpBlC,QAASwD,KAAKxB,MAAMG,oBAK1B,8BACE,6BAASpC,UAAU,QACjB,yBAAKA,UAAU,aACb,wBAAIA,UAAU,eAAd,UACA,wBAAIA,UAAW,WACb,kBAAC,EAAD,CACEsB,OAAQmC,KAAKxB,MAAMX,OACnBG,QAASgC,KAAKpB,gBAQxB,kBAAC,EAAD,W,GAhHUqB,aCFEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1583b100.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bioImg.7eb7bd4d.jpg\";","// firebase\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCzxcAqZh_VaguSnvw7K-XALJpkeLzXdD0\",\r\n  authDomain: \"alans-print-shop.firebaseapp.com\",\r\n  databaseURL: \"https://alans-print-shop.firebaseio.com\",\r\n  projectId: \"alans-print-shop\",\r\n  storageBucket: \"alans-print-shop.appspot.com\",\r\n  messagingSenderId: \"361587388270\",\r\n  appId: \"1:361587388270:web:7d52deeecd848a20619b7f\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n//export\r\nexport default firebase\r\n","import React from 'react';\r\nimport './profile.scss'\r\nimport BioImage from \"../../assets/bioImg.jpg\"\r\n\r\nfunction Profile (props) {\r\n  return (\r\n      <div className=\"profileContainer\">\r\n        {/* profile picture */}\r\n      <div className={props.showImg ? \"profileImg\" : \"hidden\"}>\r\n          <img src={BioImage} alt=\"Profile picture of Alan Martin\"/>\r\n        </div>\r\n        {/* User bio */}\r\n        <div className=\"profileInfo\">\r\n          {/* name */}\r\n        <h1 className={props.showImg ? \"\" : \"hidden\"}>Alan Martin</h1>\r\n          {/* bio */}\r\n          <p className={props.showBio ? \"bio\" : \"hidden\"}>\r\n          <span className='alan'>Alan</span> is a recreational photographer born and raised in the small town of Paris Ontario, Canada. He currently resides in Toronto. His roots to photography go back over fifteen years ago, when he saved up all his pocket change to buy his first camera! His early inspirations were the likes of Atiba Jefferson(SLAP, TransWorld, Thrasher, etc.) and many other local skateboard photographers. With a camera around his neck and an eyeball well... in his head, he started shooting local skateboarders in the skate scenes in and around Brant County. Unfortunately, his empty pockets began to eat away at his inspiration to be a skateboard photographer. With the many light rigs and expensive lenses needed to shoot “epic skateboard tricks” being <span>way</span> out of his price range, he began to take interest in the art of street photography. This raw and uncut type of photography spoke to him even more than his original inspiration had. Around the same time his Aunt had then passed down an Olympus Om-G camera, yes you heard it right! O-M-G! With which he quickly fell in love with film photography. Fast forward to the present day: Alan has continued his path with analog photography and has since added to his collection of vintage cameras while practicing developing his own film from the comfort of his bathtub! So with the stench of blix and developer in the air, I introduce his... What I really mean is <span>my</span> mediocre works of... art?\r\n          {/* show and hide bio button  */}\r\n          </p>\r\n          <button className=\"btn\" onClick={props.clickBio}>\r\n          About {props.showImg ? \"\" : <i className=\"fas fa-times\" aria-hidden=\"true\" title=\"Close Cart\"></i>}\r\n          </button>\r\n        </div>\r\n      </div>\r\n  )\r\n\r\n};\r\n\r\n\r\nexport default Profile","import React from 'react';\r\nimport './topNav.scss'\r\n\r\nfunction TopNav(props) {\r\n  return(\r\n    <nav className=\"topNav\">\r\n      <h2 title=\"Print Shop\">PrintShoppe</h2>\r\n      <a className=\"cartBtn\" onClick={props.toggleOpen}><i className=\"fas fa-shopping-bag\" aria-hidden={true} title=\"Open Cart\"></i></a>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default TopNav;","import React from 'react';\r\nimport './cartDrawer.scss'\r\n\r\nfunction CartDrawer(props) {\r\n  return(\r\n    <div className={props.openClose ? \"drawer\" : \"hidden\"}>\r\n    {/* <div className=> */}\r\n      <button className=\"closeDrawer\" onClick={props.toggleClose}>\r\n        <i className=\"fas fa-times\" aria-hidden=\"true\" title=\"Close Cart\"></i>\r\n      </button>\r\n      <ul>\r\n        {props.cartItems.map((item)=> {\r\n          return (\r\n            <li className=\"cartItem\">\r\n              <h3>{item.title}</h3>\r\n              <p>{item.price}</p>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <div className=\"totalPrice\">\r\n      <h3>Total: ${props.finalPrice === 0 ? \"\" :  props.finalPrice}</h3>\r\n      </div>\r\n      <div className=\"cartBtns\">\r\n        <button className=\"clearCart btn\" onClick={props.removeAllItem}>Clear Cart</button>\r\n        <button className=\"checkOut btn\">Checkout</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartDrawer;","import React from 'react';\r\nimport './shop.scss'\r\n\r\nfunction Shop(props) {\r\n  return(\r\n    props.prints.map((print) => {\r\n      return(\r\n          <li>\r\n            <div className=\"printImg\">\r\n              <img src={print.img} alt=\"{print.alt}\"/>\r\n            </div>\r\n            <div className=\"printInfo\">\r\n              <h2>{print.title}</h2>\r\n              <div className=\"price\">\r\n                <p><span>Price:</span> ${print.price}</p>\r\n              <button className=\"addToCart\" onClick={()=> props.addItem(print)}><i className=\"fas fa-cart-plus\" aria-hidden=\"true\" title=\"Add to Cart\" id={print.id}></i></button>\r\n              </div>\r\n            </div>\r\n\r\n          </li>\r\n        );\r\n      })\r\n  );\r\n};\r\n\r\nexport default Shop;","import React from 'react';\r\nimport './footer.scss'\r\n\r\nfunction Footer() {\r\n  return(\r\n    <p className=\"copyright\">\r\n      © <a href=\"https://alan-martin.dev/\">Alan-Martin Dev</a>\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport firebase from './firebase/firebase'\n\n// sass\nimport './styles/setup.scss'\nimport './styles/general.scss'\n\n// components\nimport Profile from './components/Profile/Profile'\nimport TopNav from './components/TopNav/TopNav'\nimport CartDrawer from './components/CartDrawer/CartDrawer'\nimport Shop from './components/Shop/Shop'\nimport Footer from './components/Footer/Footer'\n\nclass App extends Component {\n  // set states needed to run application\n  constructor () {\n    super()\n    this.state = {\n      prints: [], //prints array populated from FireBase\n      cart: [], // Cart array is filled with on user click\n      total: 0, // Total cost of items in cart\n      isBioVisible: false, // Allows user to hide and show bio\n      isBioImgVisible: true, // hides/shows picture/header when showing bio\n      isCartOpen: false, // toggles cart drawer\n      \n    }\n  }\n  // calls FireBase to populate print array\n  componentDidMount () {\n\n    const getPrints = () => {\n      // calls FireBase\n      const dbRefPrints = firebase.database().ref('/printShop')\n      dbRefPrints.on('value', (result) => {\n        //  create empt array to store FireBase data\n        const printsArray = [];\n        //store the data from firebase in printData variable\n        const printData = result.val()\n        // use 'for' look to push data into the array\n        for (let key in printData) {\n          printsArray.push(printData[key]);\n        }\n        // setState of original with array from FireBase\n        this.setState({\n          prints: printsArray\n        });\n      })\n    }\n    // calls get prints and populates array of prints\n    getPrints()    \n  }\n\n  // Toggle CartDrawer with onClick\n  toggleDrawer = () => {\n    // toggle truth and false of isCartOpen\n    this.setState({\n      isCartOpen: !this.state.isCartOpen,\n    })\n  };\n  \n  // Toggles bio / H1 and Img being shown\n  toggleBio = () => {\n    this.setState({\n      isBioVisible: !this.state.isBioVisible,\n      isBioImgVisible: !this.state.isBioImgVisible,\n    })\n  }\n\n  // Add items to cart\n  addToCart = (print) => {\n    const newCart = [...this.state.cart, print]\n    const newTotal = this.state.total + print.price;\n    const roundedPrice = Math.floor((newTotal + Number.EPSILON) * 100) / 100\n    \n    this.setState({\n      cart: newCart,\n      total: roundedPrice,\n    })\n  };\n\n  // empty cart of selected items\n  emptyCart = () => {\n    const emptyCart = []\n    this.setState({\n     cart: emptyCart,\n    total: 0\n    })      \n  }\n  \n  render() {\n    return (\n      <>\n        <header>\n          <TopNav toggleOpen={this.toggleDrawer}/>\n          <CartDrawer \n            openClose={this.state.isCartOpen} \n            toggleClose={this.toggleDrawer} \n            cartItems={this.state.cart} \n            finalPrice={this.state.total} \n            removeAllItem={this.emptyCart}\n          />\n          <div className=\"container\">\n            <Profile \n              clickBio={this.toggleBio} \n              showBio={this.state.isBioVisible}\n              showImg={this.state.isBioImgVisible}\n            />\n          </div>\n        </header>\n\n        <main>\n          <section className=\"shop\">\n            <div className=\"container\">\n              <h2 className=\"printHeader\">Prints</h2>\n              <ul className={'gallery'}>\n                <Shop \n                  prints={this.state.prints} \n                  addItem={this.addToCart} \n                />\n              </ul>\n            </div>\n          </section>\n        </main>\n\n\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}